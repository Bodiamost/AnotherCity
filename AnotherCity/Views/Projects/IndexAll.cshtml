@model IEnumerable<AnotherCity.Models.Project>

@{
    ViewData["Title"] = "All projects";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="bg-gray no-padding below-header">
    <div class="container">
        <div class="row">
            
            @if (Model.Where(d => Math.Abs(((d.StartDate.Value.Month - DateTime.Now.Month) + 12 * (d.StartDate.Value.Year - DateTime.Now.Year))) <= 1).Count() != 0)
            {
                <h3 class="hidden-lg hidden-md hidden-sm title-med text-center">Current projects</h3>
                @await Html.PartialAsync("_SliderItems", Model.Where(d => Math.Abs(((d.StartDate.Value.Month - DateTime.Now.Month) + 12 * (d.StartDate.Value.Year - DateTime.Now.Year))) <= 1).OrderBy(s => s.FinishDate))
            }
            @if (Model.Where(d => ((d.StartDate.Value.Month - DateTime.Now.Month) + 12 * (d.StartDate.Value.Year - DateTime.Now.Year)) > 0).Count() != 0)
            {
                <h3 class="hidden-lg hidden-md hidden-sm title-med  text-center">Future projects</h3>
                @await Html.PartialAsync("_RightItems", Model.Where(d => ((d.StartDate.Value.Month - DateTime.Now.Month) + 12 * (d.StartDate.Value.Year - DateTime.Now.Year)) > 0).OrderBy(s => s.StartDate))
            }
        </div>
    </div>
</section>
@if (Model.Where(d => ((d.StartDate.Value.Month - DateTime.Now.Month) + 12 * (d.StartDate.Value.Year - DateTime.Now.Year)) < 0).Count() != 0)
{
    <section id="blog" class="bg-gray no-padding-top">
        <div class="container">
            <h3 class="hidden-lg hidden-md hidden-sm title-med text-center">Old projects</h3>
            @await Html.PartialAsync("_BottomItems", Model.Where(d => ((d.StartDate.Value.Month - DateTime.Now.Month) + 12 * (d.StartDate.Value.Year - DateTime.Now.Year)) < 0).OrderByDescending(s => s.StartDate))
        </div>
    </section>
}